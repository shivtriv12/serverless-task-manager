AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >-
  Serverless Task Manager API

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 10
    Environment:
      Variables:
        TASKS_TABLE: !Ref TasksTable

Resources:
  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: TasksTable
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: taskId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: taskId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  CreateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/createTask.createTask
      Policies: # ← add this block
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        PostTask:
          Type: Api
          Properties:
            RestApiId: !Ref TaskApi # ← reference your explicit Api
            Path: /tasks
            Method: post

  GetTasksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/getTasks.getTasks
      Policies: # ← add this block
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        ListTasks:
          Type: Api
          Properties:
            RestApiId: !Ref TaskApi # ← reference your explicit Api
            Path: /tasks
            Method: get

  GetTaskByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/getTaskById.getTaskById
      Policies: # ← add this block
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        GetTask:
          Type: Api
          Properties:
            RestApiId: !Ref TaskApi # ← reference your explicit Api
            Path: /tasks/{id}
            Method: get

  UpdateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/updateTask.updateTask
      Policies: # ← add this block
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        PutTask:
          Type: Api
          Properties:
            RestApiId: !Ref TaskApi # ← reference your explicit Api
            Path: /tasks/{id}
            Method: put

  DeleteTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/deleteTask.deleteTask
      Policies: # ← add this block
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Events:
        DeleteTask:
          Type: Api
          Properties:
            RestApiId: !Ref TaskApi # ← reference your explicit Api
            Path: /tasks/{id}
            Method: delete
    # 1) User Pool to manage your users
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: TaskManagerUserPool
      AutoVerifiedAttributes:
        - email

  # 2) App Client to allow your code to authenticate
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: TaskManagerClient
      UserPoolId: !Ref CognitoUserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH

  TaskApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: TaskManagerApi
      StageName: Prod # must match the stage you’re hitting
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt CognitoUserPool.Arn
            Identity:
              ReauthorizeEvery: 0

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${TaskApi}.execute-api.${AWS::Region}.amazonaws.com/Prod" # Use TaskApi logical ID

  TasksTableName:
    Description: "DynamoDB table name for tasks"
    Value: !Ref TasksTable

  CognitoUserPoolId:
    Description: "Cognito User Pool ID"
    Value: !Ref CognitoUserPool

  CognitoUserPoolClientId:
    Description: "Cognito User Pool Client ID"
    Value: !Ref CognitoUserPoolClient
